/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <15 16>;
        };

        Fn_Layer {
            bindings = <&mo 2>;
            key-positions = <1 2>;
        };

        Bluetooth_Layer {
            bindings = <&mo 3>;
            key-positions = <16 15 2 1>;
        };

        Colon {
            bindings = <&kp COLON>;
            key-positions = <21 19>;
            timeout-ms = <35>;
        };

        SemiColon {
            bindings = <&kp SEMICOLON>;
            key-positions = <19 20>;
            timeout-ms = <35>;
        };

        Apostrophe {
            bindings = <&kp SQT>;
            key-positions = <8 21>;
            timeout-ms = <35>;
        };

        Quote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <21 7>;
            timeout-ms = <35>;
        };

        Equal {
            bindings = <&kp EQUAL>;
            key-positions = <20 21>;
            timeout-ms = <35>;
        };

        Underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <31 30>;
            timeout-ms = <35>;
        };

        Minus {
            bindings = <&kp MINUS>;
            key-positions = <19 18>;
            timeout-ms = <35>;
        };

        Plus {
            bindings = <&kp PLUS>;
            key-positions = <18 21>;
            timeout-ms = <35>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <4 3>;
            timeout-ms = <35>;
        };

        FwdSlash {
            bindings = <&kp SLASH>;
            key-positions = <31 20>;
            timeout-ms = <35>;
        };

        BackSlash {
            bindings = <&kp BACKSLASH>;
            key-positions = <20 33 7>;
        };

        Umbrella {
            bindings = <&kp CARET>;
            key-positions = <19 8 21>;
            timeout-ms = <35>;
        };

        Smaller {
            bindings = <&kp LESS_THAN>;
            key-positions = <19 8>;
            timeout-ms = <35>;
        };

        Larger {
            bindings = <&kp GREATER_THAN>;
            key-positions = <7 20>;
            timeout-ms = <35>;
        };

        VerticalLink {
            bindings = <&kp PIPE>;
            key-positions = <8 19 41>;
        };

        Gay {
            bindings = <&kp TILDE>;
            key-positions = <19 10>;
        };

        Grave {
            bindings = <&kp GRAVE>;
            key-positions = <6 19>;
        };

        Percent {
            bindings = <&kp PERCENT>;
            key-positions = <7 33>;
        };

        Exclamation {
            bindings = <&kp EXCLAMATION>;
            key-positions = <7 8 21>;
        };

        QuestionMark {
            bindings = <&kp QUESTION>;
            key-positions = <19 20 9>;
        };

        Money {
            bindings = <&kp DOLLAR>;
            key-positions = <31 32 21>;
        };

        At {
            bindings = <&kp AT_SIGN>;
            key-positions = <7 20 21>;
        };

        Asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <30 31 32>;
        };

        And-Ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <20 18>;
        };

        Hash {
            bindings = <&kp HASH>;
            key-positions = <6 7 8>;
        };

        Home {
            bindings = <&kp HOME>;
            key-positions = <7 9 8>;
        };

        Insert {
            bindings = <&kp INSERT>;
            key-positions = <41 40>;
        };

        OpenSquareBrac {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <39 7>;
        };

        OpenParen {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <39 19>;
        };

        OpenCurlyBrack {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <39 31>;
        };

        CloseSquareBrac {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <39 8>;
        };

        CloseParen {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <39 20>;
        };

        CloseCurlyBrac {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <39 32>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp LEFT_CONTROL  &kp Q  &kp W  &kp F       &kp P  &kp B             &kp J      &kp L       &kp U         &kp Y       &kp BACKSPACE  &kp C_MUTE
&kp LEFT_ALT      &kp A  &kp R  &kp S       &kp T  &kp G             &kp M      &kp N       &kp E         &kp I       &kp O          &kp ENTER
&kp LEFT_GUI      &kp Z  &kp X  &kp C       &kp D  &kp V             &kp K      &kp H       &kp COMMA     &kp PERIOD  &kp LEFT       &kp RIGHT
                                &kp DELETE  &mo 1  &kp LEFT_SHIFT    &kp SPACE  &kp ESCAPE  &kp LEFT_GUI
            >;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N1  &kp N2  &kp N3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N4  &kp N5  &kp N6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N7  &kp N8  &kp N9  &trans  &trans
                        &trans  &trans  &trans    &trans  &kp N0  &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &bt BT_CLR    &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans        &trans        &trans        &trans        &trans
                        &trans  &trans  &trans    &trans        &trans        &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        hell {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
