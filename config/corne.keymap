/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Num_layer {
            bindings = <&mo 1>;
            key-positions = <15 16>;
        };

        Fn_Layer {
            bindings = <&mo 2>;
            key-positions = <1 2>;
        };

        Period {
            bindings = <&kp PERIOD>;
            key-positions = <22 21>;
            timeout-ms = <20>;
        };

        Commna {
            bindings = <&kp COMMA>;
            key-positions = <21 20>;
            timeout-ms = <20>;
        };

        Bluetooth_Layer {
            bindings = <&mo 3>;
            key-positions = <1 2 15 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp LEFT_CONTROL  &kp Q  &kp W  &kp F       &kp P     &kp B             &kp J      &kp L          &kp U       &kp Y       &kp SEMICOLON  &none
&kp LEFT_ALT      &kp A  &kp R  &kp S       &kp T     &kp G             &kp M      &kp N          &kp E       &kp I       &kp O          &kp SQT
&kp LEFT_GUI      &kp Z  &kp X  &kp C       &kp D     &kp V             &kp K      &kp H          &kp COMMA   &kp PERIOD  &kp SLASH      &none
                                &kp ESCAPE  &kp CAPS  &kp LEFT_SHIFT    &kp SPACE  &kp BACKSPACE  &kp DELETE
            >;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N1  &kp N2  &kp N3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N4  &kp N5  &kp N6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N7  &kp N8  &kp N9  &trans  &trans
                        &trans  &trans  &trans    &kp N0  &trans  &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &bt BT_CLR    &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans        &trans        &trans        &trans        &trans
                        &trans  &trans  &trans    &trans        &trans        &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        hell {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
